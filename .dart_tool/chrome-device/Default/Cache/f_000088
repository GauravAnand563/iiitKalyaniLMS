define(['dart_sdk', 'packages/flutter/src/painting/border_radius.dart', 'packages/clay_containers/constants.dart', 'packages/flutter/src/painting/box_shadow.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/painting/box_decoration.dart', 'packages/flutter/src/painting/gradient.dart', 'packages/flutter/src/painting/alignment.dart'], (function load__packages__clay_containers__widgets__clay_container_dart(dart_sdk, packages__flutter__src__painting__border_radius$46dart, packages__clay_containers__constants$46dart, packages__flutter__src__painting__box_shadow$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__painting__box_decoration$46dart, packages__flutter__src__painting__gradient$46dart, packages__flutter__src__painting__alignment$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const ui = dart_sdk.ui;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const constants = packages__clay_containers__constants$46dart.constants;
  const box_shadow = packages__flutter__src__painting__box_shadow$46dart.src__painting__box_shadow;
  const container = packages__flutter__src__widgets__widget_span$46dart.src__widgets__container;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const box_decoration = packages__flutter__src__painting__box_decoration$46dart.src__painting__box_decoration;
  const gradient = packages__flutter__src__painting__gradient$46dart.src__painting__gradient;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  var clay_container = Object.create(dart.library);
  var $map = dartx.map;
  var $_get = dartx._get;
  var $reversed = dartx.reversed;
  var $toList = dartx.toList;
  var $truncate = dartx.truncate;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    dynamicAnddynamicToMapEntry: () => (T.dynamicAnddynamicToMapEntry = dart.constFn(dart.fnType(core.MapEntry, [dart.dynamic, dart.dynamic])))(),
    JSArrayOfColor: () => (T.JSArrayOfColor = dart.constFn(_interceptors.JSArray$(ui.Color)))(),
    JSArrayOfBoxShadow: () => (T.JSArrayOfBoxShadow = dart.constFn(_interceptors.JSArray$(box_shadow.BoxShadow)))(),
    ColorN: () => (T.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    ListOfColorN: () => (T.ListOfColorN = dart.constFn(core.List$(T.ColorN())))(),
    VoidToListOfColorN: () => (T.VoidToListOfColorN = dart.constFn(dart.fnType(T.ListOfColorN(), [])))(),
    ListOfColorNTodynamic: () => (T.ListOfColorNTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfColorN()])))(),
    ListOfColor: () => (T.ListOfColor = dart.constFn(core.List$(ui.Color)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: constants.CurveType.prototype,
        [_name]: "CurveType.concave",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: constants.CurveType.prototype,
        [_name]: "CurveType.convex",
        index: 1
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: constants.CurveType.prototype,
        [_name]: "CurveType.none",
        index: 2
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "height",
        [_Location_column]: 7,
        [_Location_line]: 122,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "width",
        [_Location_column]: 7,
        [_Location_line]: 123,
        [_Location_file]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "child",
        [_Location_column]: 7,
        [_Location_line]: 124,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 125,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.constList([C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7, C[8] || CT.C8], widget_inspector._Location);
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[4] || CT.C4,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 121,
        [_Location_file]: "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/clay_containers-0.3.2/lib/widgets/clay_container.dart"
      });
    }
  }, false);
  var C = Array(9).fill(void 0);
  var I = [
    "file:///C:/src/flutter/.pub-cache/hosted/pub.dartlang.org/clay_containers-0.3.2/lib/widgets/clay_container.dart",
    "package:clay_containers/widgets/clay_container.dart"
  ];
  var height$ = dart.privateName(clay_container, "ClayContainer.height");
  var width$ = dart.privateName(clay_container, "ClayContainer.width");
  var color$ = dart.privateName(clay_container, "ClayContainer.color");
  var parentColor$ = dart.privateName(clay_container, "ClayContainer.parentColor");
  var surfaceColor$ = dart.privateName(clay_container, "ClayContainer.surfaceColor");
  var spread$ = dart.privateName(clay_container, "ClayContainer.spread");
  var child$ = dart.privateName(clay_container, "ClayContainer.child");
  var borderRadius$ = dart.privateName(clay_container, "ClayContainer.borderRadius");
  var customBorderRadius$ = dart.privateName(clay_container, "ClayContainer.customBorderRadius");
  var curveType$ = dart.privateName(clay_container, "ClayContainer.curveType");
  var depth$ = dart.privateName(clay_container, "ClayContainer.depth");
  var emboss$ = dart.privateName(clay_container, "ClayContainer.emboss");
  var _getAdjustColor = dart.privateName(clay_container, "_getAdjustColor");
  var _getFlatGradients = dart.privateName(clay_container, "_getFlatGradients");
  var _getConcaveGradients = dart.privateName(clay_container, "_getConcaveGradients");
  var _getConvexGradients = dart.privateName(clay_container, "_getConvexGradients");
  var _name = dart.privateName(constants, "_name");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  clay_container.ClayContainer = class ClayContainer extends framework.StatelessWidget {
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get color() {
      return this[color$];
    }
    set color(value) {
      super.color = value;
    }
    get parentColor() {
      return this[parentColor$];
    }
    set parentColor(value) {
      super.parentColor = value;
    }
    get surfaceColor() {
      return this[surfaceColor$];
    }
    set surfaceColor(value) {
      super.surfaceColor = value;
    }
    get spread() {
      return this[spread$];
    }
    set spread(value) {
      super.spread = value;
    }
    get child() {
      return this[child$];
    }
    set child(value) {
      super.child = value;
    }
    get borderRadius() {
      return this[borderRadius$];
    }
    set borderRadius(value) {
      super.borderRadius = value;
    }
    get customBorderRadius() {
      return this[customBorderRadius$];
    }
    set customBorderRadius(value) {
      super.customBorderRadius = value;
    }
    get curveType() {
      return this[curveType$];
    }
    set curveType(value) {
      super.curveType = value;
    }
    get depth() {
      return this[depth$];
    }
    set depth(value) {
      super.depth = value;
    }
    get emboss() {
      return this[emboss$];
    }
    set emboss(value) {
      super.emboss = value;
    }
    [_getAdjustColor](baseColor, amount) {
      if (baseColor == null) dart.nullFailed(I[0], 33, 31, "baseColor");
      let colors = new _js_helper.LinkedMap.from(["red", baseColor.red, "green", baseColor.green, "blue", baseColor.blue]);
      colors = colors[$map](dart.dynamic, dart.dynamic, dart.fn((key, value) => {
        if (dart.dtest(dart.dsend(dart.dsend(value, '+', [amount]), '<', [0]))) return new core.MapEntry.__(key, 0);
        if (dart.dtest(dart.dsend(dart.dsend(value, '+', [amount]), '>', [255]))) return new core.MapEntry.__(key, 255);
        return new core.MapEntry.__(key, dart.dsend(value, '+', [amount]));
      }, T.dynamicAnddynamicToMapEntry()));
      return new ui.Color.fromRGBO(core.int.as(colors[$_get]("red")), core.int.as(colors[$_get]("green")), core.int.as(colors[$_get]("blue")), 1.0);
    }
    [_getFlatGradients](baseColor, depth) {
      return T.JSArrayOfColor().of([ui.Color.as(baseColor), ui.Color.as(baseColor)]);
    }
    [_getConcaveGradients](baseColor, depth) {
      return T.JSArrayOfColor().of([this[_getAdjustColor](ui.Color.as(baseColor), 0 - dart.notNull(core.num.as(depth))), this[_getAdjustColor](ui.Color.as(baseColor), depth)]);
    }
    [_getConvexGradients](baseColor, depth) {
      return T.JSArrayOfColor().of([this[_getAdjustColor](ui.Color.as(baseColor), depth), this[_getAdjustColor](ui.Color.as(baseColor), 0 - dart.notNull(core.num.as(depth)))]);
    }
    build(context) {
      if (context == null) dart.nullFailed(I[0], 69, 29, "context");
      let heightValue = this.height == null ? null : this.height;
      let widthValue = this.width == null ? null : this.width;
      let depthValue = this.depth == null ? 20 : this.depth;
      let colorValue = this.color == null ? new ui.Color.new(4293980400) : this.color;
      let parentColorValue = this.parentColor == null ? dart.nullCheck(colorValue) : dart.nullCheck(this.parentColor);
      let surfaceColorValue = this.surfaceColor == null ? colorValue : this.surfaceColor;
      let spreadValue = this.spread == null ? 6.0 : dart.nullCheck(this.spread);
      let embossValue = this.emboss == null ? false : dart.nullCheck(this.emboss);
      let borderRadiusValue = this.borderRadius == null ? border_radius.BorderRadius.zero : new border_radius.BorderRadius.circular(dart.nullCheck(this.borderRadius));
      if (this.customBorderRadius != null) {
        borderRadiusValue = this.customBorderRadius;
      }
      let curveTypeValue = this.curveType == null ? constants.CurveType.none : dart.nullCheck(this.curveType);
      let shadowList = T.JSArrayOfBoxShadow().of([new box_shadow.BoxShadow.new({color: this[_getAdjustColor](parentColorValue, embossValue ? 0 - dart.nullCheck(depthValue) : depthValue), offset: new ui.Offset.new(0 - spreadValue, 0 - spreadValue), blurRadius: spreadValue}), new box_shadow.BoxShadow.new({color: this[_getAdjustColor](parentColorValue, embossValue ? depthValue : 0 - dart.nullCheck(depthValue)), offset: new ui.Offset.new(spreadValue, spreadValue), blurRadius: spreadValue})]);
      if (embossValue) shadowList = shadowList[$reversed][$toList]();
      if (embossValue) colorValue = this[_getAdjustColor](dart.nullCheck(colorValue), 0 - (dart.nullCheck(depthValue) / 2)[$truncate]());
      if (this.surfaceColor != null) colorValue = surfaceColorValue;
      let gradientColors = null;
      function gradientColors$35get() {
        let t1;
        t1 = gradientColors;
        return t1 == null ? dart.throw(new _internal.LateError.localNI("gradientColors")) : t1;
      }
      dart.fn(gradientColors$35get, T.VoidToListOfColorN());
      function gradientColors$35set(t2) {
        if (t2 == null) dart.nullFailed(I[0], 108, 23, "null");
        return gradientColors = t2;
      }
      dart.fn(gradientColors$35set, T.ListOfColorNTodynamic());
      switch (curveTypeValue) {
        case C[0] || CT.C0:
        {
          gradientColors$35set(this[_getConcaveGradients](colorValue, depthValue));
          break;
        }
        case C[1] || CT.C1:
        {
          gradientColors$35set(this[_getConvexGradients](colorValue, depthValue));
          break;
        }
        case C[2] || CT.C2:
        {
          gradientColors$35set(this[_getFlatGradients](colorValue, depthValue));
          break;
        }
      }
      return new container.Container.new({height: heightValue, width: widthValue, child: this.child, decoration: new box_decoration.BoxDecoration.new({borderRadius: borderRadiusValue, color: colorValue, gradient: new gradient.LinearGradient.new({begin: alignment.Alignment.topLeft, end: alignment.Alignment.bottomRight, colors: T.ListOfColor().as(gradientColors$35get())}), boxShadow: shadowList}), $creationLocationd_0dea112b090073317d4: C[3] || CT.C3});
    }
  };
  (clay_container.ClayContainer.new = function(opts) {
    let child = opts && 'child' in opts ? opts.child : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let color = opts && 'color' in opts ? opts.color : null;
    let surfaceColor = opts && 'surfaceColor' in opts ? opts.surfaceColor : null;
    let parentColor = opts && 'parentColor' in opts ? opts.parentColor : null;
    let spread = opts && 'spread' in opts ? opts.spread : null;
    let borderRadius = opts && 'borderRadius' in opts ? opts.borderRadius : null;
    let customBorderRadius = opts && 'customBorderRadius' in opts ? opts.customBorderRadius : null;
    let curveType = opts && 'curveType' in opts ? opts.curveType : null;
    let depth = opts && 'depth' in opts ? opts.depth : null;
    let emboss = opts && 'emboss' in opts ? opts.emboss : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[child$] = child;
    this[height$] = height;
    this[width$] = width;
    this[color$] = color;
    this[surfaceColor$] = surfaceColor;
    this[parentColor$] = parentColor;
    this[spread$] = spread;
    this[borderRadius$] = borderRadius;
    this[customBorderRadius$] = customBorderRadius;
    this[curveType$] = curveType;
    this[depth$] = depth;
    this[emboss$] = emboss;
    clay_container.ClayContainer.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = clay_container.ClayContainer.prototype;
  dart.addTypeTests(clay_container.ClayContainer);
  dart.addTypeCaches(clay_container.ClayContainer);
  dart.setMethodSignature(clay_container.ClayContainer, () => ({
    __proto__: dart.getMethods(clay_container.ClayContainer.__proto__),
    [_getAdjustColor]: dart.fnType(ui.Color, [ui.Color, dart.dynamic]),
    [_getFlatGradients]: dart.fnType(core.List$(ui.Color), [dart.dynamic, dart.dynamic]),
    [_getConcaveGradients]: dart.fnType(core.List$(ui.Color), [dart.dynamic, dart.dynamic]),
    [_getConvexGradients]: dart.fnType(core.List$(ui.Color), [dart.dynamic, dart.dynamic]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(clay_container.ClayContainer, I[1]);
  dart.setFieldSignature(clay_container.ClayContainer, () => ({
    __proto__: dart.getFields(clay_container.ClayContainer.__proto__),
    height: dart.finalFieldType(dart.nullable(core.double)),
    width: dart.finalFieldType(dart.nullable(core.double)),
    color: dart.finalFieldType(dart.nullable(ui.Color)),
    parentColor: dart.finalFieldType(dart.nullable(ui.Color)),
    surfaceColor: dart.finalFieldType(dart.nullable(ui.Color)),
    spread: dart.finalFieldType(dart.nullable(core.double)),
    child: dart.finalFieldType(dart.nullable(framework.Widget)),
    borderRadius: dart.finalFieldType(dart.nullable(core.double)),
    customBorderRadius: dart.finalFieldType(dart.nullable(border_radius.BorderRadius)),
    curveType: dart.finalFieldType(dart.nullable(constants.CurveType)),
    depth: dart.finalFieldType(dart.nullable(core.int)),
    emboss: dart.finalFieldType(dart.nullable(core.bool))
  }));
  dart.trackLibraries("packages/clay_containers/widgets/clay_container.dart", {
    "package:clay_containers/widgets/clay_container.dart": clay_container
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["clay_container.dart"],"names":[],"mappings":"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","file":"../../../../../../../../../D:/packages/clay_containers/widgets/clay_container.dart.lib.js"}');
  // Exports:
  return {
    widgets__clay_container: clay_container
  };
}));

//# sourceMappingURL=clay_container.dart.lib.js.map
